name: builder qbee_image

on:
  workflow_dispatch:
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        #with:
          #submodules: true
      - 
        name: Checkout qbee
        uses: actions/checkout@v4 
        with:
          repository: DDS-Derek/qBittorrent-Enhanced-Edition-Docker
          path: QBEE
      - 
        name: Copy files
        env:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          Github_Token: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          sudo mkdir -p /etc/DDSRem &&
          cd /home/runner/work/vps/vps/build_image/qbee
          jq ".Github_Token = \"$Github_Token\" | .Dockerhub_Username = \"$username\" | .Dockerhub_Password = \"$password\"" config.json > 1.json &&
          mv 1.json  config.json &&
          sudo cp -rf config.json  /etc/DDSRem/config.json &&
          cd /etc/DDSRem
        #echo "$(ls /etc/DDSRem/)" &&
          #echo "$(jq -r '.Dockerhub_Username' /etc/DDSRem/config.json)"
          #echo "$(jq -r '.Dockerhub_Password' /etc/DDSRem/config.json)"
          #echo "$(jq -r '.Github_Token' /etc/DDSRem/config.json)"
          #echo "当前路径: $(pwd)"
      - 
        name: Execute SH
        env:
          command1: docker login --password ${Dockerhub_Password} --username ${Dockerhub_Username}
          command2: echo "${Dockerhub_Password}" | docker login --username ${Dockerhub_Username} --password-stdin
        run:  |
          cd /home/runner/work/vps/vps/QBEE
          jq '.ARCH = "linux/amd64"' Build.json > 1.json &&
          mv 1.json  Build.json &&
          sed -i 's/-it//g' Build.sh
          chmod +x ./Build.sh  &&
          ./Build.sh
      #echo "当前路径: $(pwd)"  &&
      #echo "当前路径: ${HOME}"  &&
      #echo "$(ls /etc/DDSRem/)" &&
      #echo "$(jq -r '.Dockerhub_Username' /etc/DDSRem/config.json)"
      #echo "$(jq -r '.Dockerhub_Password' /etc/DDSRem/config.json)"
      #echo "$(jq -r '.ARCH' ./Build.json)"
      #echo "$(cat -n Build.sh)"
      #sed -i "s/$command1/$command2/g" Build.sh
